---
# Source: secure-iac-policy/templates/deployment.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: secure-iac-policy-pdb
  namespace: sysdig
spec:
  selector:
    matchLabels:
      app: secure-iac-policy
  maxUnavailable: 1
---
# Source: secure-iac-policy/templates/secure-iac-policy-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secure-iac-policy-secret
  namespace: sysdig
type: Opaque
data:
  segmentio.token: ""
  MONITOR_BACKEND_AUDIT_TOKEN: "YWUzNWJhZjAtMWJjNi00MmU5LWFhNWEtNGIxYmZiOTI2NTA5"
  CSPM_SERVICE_TOKEN: "dGVzdC10b2tlbg=="
stringData:
  DB_ADMIN_USER: postgres
  DB_ADMIN_PASSWORD: password
  DB_USER: policydbuser
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_HOST: host.docker.internal
  DB_PORT: "5432"
  DB_SSL_MODE: disable
  ADMIN_DB_NAME: postgres
---
# Source: secure-iac-policy/templates/secure-iac-policy-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secure-iac-policy-config
  namespace: sysdig
data:
  ENVIRONMENT: DEVELOPMENT
  DB_NAME: policy

  NATS_URL: "nats"
  NATS_TLS_ENABLED: "true"

  SERVICE_NAME: secure-iac-policy
  AUDIT_FORWARDING_ENABLED: "true"
  INGESTION_API_GRPC_ENDPOINT: sysdigcloud-events-ingestion:3000
  AUDIT_WORKERS: "5"
  GRAPH_INGESTION_DRY_RUN: "false"
  LEGACY_BACKEND_ENDPOINT: "http://backend-mock-service:9000"
  LEGACY_BACKEND_TLS_SKIP_CHECK: "true"
---
# Source: secure-iac-policy/templates/secure-iac-policy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secure-iac-policy-service
  namespace: sysdig
spec:
  type: ClusterIP
  selector:
    app: secure-iac-policy
  ports:
    - port: 8080
      targetPort: 8080
---
# Source: secure-iac-policy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: secure-iac-policy
  name: secure-iac-policy-deployment
  namespace: sysdig
spec:
  replicas: 
  selector:
    matchLabels:
      app: secure-iac-policy
  template:
    metadata:
      labels:
        app: secure-iac-policy
        np-allow-ingress: 'true'
    spec:
      serviceAccountName: sysdig
      imagePullSecrets:
        - name: sysdigcloud-pull-secret
      containers:        
        - name : secure-iac-policy-container
          image: "local/policy:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: secure-iac-policy-secret
            - configMapRef:
                name: secure-iac-policy-config
          env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NATS_TLS_CA
              value: /opt/certs/nats-js-tls-certs/ca.crt
            - name: NATS_USER
              valueFrom:
                secretKeyRef:
                  name: nats-credentials-sysdig
                  key: NATS_USER
                  optional: true
            - name: NATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: nats-credentials-sysdig
                  key: NATS_USER
                  optional: true
            - name: NATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nats-credentials-sysdig
                  key: NATS_PASSWORD
                  optional: true
---
# Source: secure-iac-policy/templates/secure-iac-policy-pre-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: sysdig
  name: db-secure-iac-policy-init-job
spec:
  backoffLimit: 0
  template:
    metadata:
      name: secure-iac-policy-db-upgrade-job
    spec:
      serviceAccountName: sysdig
      restartPolicy: Never
      imagePullSecrets:
        - name: sysdigcloud-pull-secret
      containers:
        - name: secure-iac-policy-db-upgrade-job-container
          image: local/policy-db-migrations:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              dbName=$(head -n 1 _name)
              postgresEndPoint=${POSTGRES_HOST}:${POSTGRES_PORT}
              psql postgresql://${POSTGRES_ADMIN}:${PGPASSWORD}@${postgresEndPoint}/${POSTGRES_DB} <<- EOF
                  CREATE DATABASE ${dbName};
                  CREATE USER ${POSTGRES_USER} WITH ENCRYPTED PASSWORD '${POSTGRES_USER_PASS}';
                  GRANT ALL PRIVILEGES ON DATABASE ${dbName} TO ${POSTGRES_USER};
              EOF
              connString="postgresql://${POSTGRES_USER}:${POSTGRES_USER_PASS}@${postgresEndPoint}/${dbName}?sslmode=$SSL_MODE&query"
              migrate -source file://migrations -database "$connString" up
          env:
            - name: POSTGRES_ADMIN
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_ADMIN_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_ADMIN_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_USER
            - name: POSTGRES_USER_PASS
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_PORT
            - name: SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: DB_SSL_MODE
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: secure-iac-policy-secret
                  key: ADMIN_DB_NAME
---
# Source: secure-iac-policy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: INGRESSCOOKIEAPI
    kubernetes.io/ingress.class: haproxy
  labels:
    app.kubernetes.io/managed-by: ingress-config
    app.kubernetes.io/name: ingress-config
    app.kubernetes.io/part-of: sysdigcloud
    role: ingress-config
    tier: infra
  name: sysdigcloud-secure-iac-policy-ingress
  namespace: sysdig
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: secure-iac-policy-service
                port:
                  number: 8080
            path: /api/cspm/v1/policy
            pathType: ImplementationSpecific
